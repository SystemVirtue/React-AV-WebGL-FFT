{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/js/Application.js","main.min.js","src/js/LoadSceneState.js","src/js/LoadingState.js","src/js/PlayState.js","src/js/Utils.js","src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","trimStart","trimEnd","Application","window","undefined","_state","_audioContext","_sourceNode","_gui","_isDebugMode","location","hash","indexOf","_javascriptAudioNode","_audioAnalyserNode","_FFT","Utils","States","LoadingState","PlayState","LoadSceneState","initialize","options","_initializeDebugMode","_initializeAudioContext","_initializeGraphicContext","_initializeStates","this","_setupGoogleAnalyticsTracking","changeState","AudioContext","webkitAudioContext","mozAudioContext","msAudioContext","createScriptProcessor","connect","destination","createAnalyser","smoothingTimeConstant","fftSize","createBufferSource","canvas","document","getElementById","canvasWidth","width","canvasHeight","height","ctx","getContext","gradient","createLinearGradient","addColorStop","onaudioprocess","array","Uint8Array","frequencyBinCount","getByteFrequencyData","clearRect","fillStyle","nbBuckets","barWidth","Math","round","fillRect","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","trackCoverLink","addEventListener","event","preventDefaultEvent","ga","trackArtistLink","githubLink","aboutLink","aboutModal","removeCSSClass","aboutModalClose","addCSSClass","asyncLoadScript","_drawStats","_initializeDebugControls","applicationControls","trackTitle","playSound","playAudio","dat","GUI","autoPlace","trackTitleController","add","Double-Edged Sword","name","onChange","value","console","log","soundCloudTrackLinks","customContainer","appendChild","domElement","fpsStats","Stats","setMode","style","cssText","body","msStats","mbStats","loop","update","newState","exit","enter","execute","getAudioContext","setSourceNodeBuffer","buffer","stop","trackInfoContainer","start","stopAudio","getFFT","setTrackInfo","trackInfo","title","trackArtworkURL","artwork_url","trackPermalinkURL","permalink_url","trackArtistPermalinkURL","user","trackAlbum","trackArtistName","httpsPermalink","replace","textContent","artistLink","href","coverLink","albumArt","src","getStates","./LoadSceneState.js","./LoadingState.js","./PlayState.js","./Utils.js",2,"_container","_camera","_scene","_renderer","_delta","_time","_oldTime","_overlay","_texture","_color","_vignette","_mouse","_gravity","_mouseObj","_Application","_has_gl","_shaderTime","_meshes","_isTouchDevice","_scaleRatio","_nbLoadedResources","THREE","Vector2","Vector3","x","y","vx","vy","navigator","userAgent","match","_initScene","Scene","PerspectiveCamera","innerWidth","innerHeight","position","z","lookAt","ImageUtils","loadTexture","_resourceLoadedCallback","wrapS","wrapT","RepeatWrapping","Texture","_generateTexture","needsUpdate","_meshLoaded","overlayMaterial","SpriteMaterial","map","useScreenCoordinates","opacity","Sprite","scale","set","WebGLRenderer","antialias","alpha","setClearColor","setSize","anisotropy","getMaxAnisotropy","top","left","webkitTransform","webkitTransformOrigin","transform","transformOrigin","_onWindowResize","_onMouseMove","_onTouchMove","ex","infoElement","innerHTML","display","_animate","aspect","updateProjectionMatrix","w","clientX","clientY","touches","geometry","SphereGeometry","size","applyMatrix","Matrix4","nbShells","attributes","uniforms","color","type","Color","hairMap","colorMap","offset","globalTime","gravity","material","ShaderMaterial","vertexShader","fragmentShader","transparent","mesh","Mesh","matrixAutoUpdate","frustumCulled","push","createElement","context","floor","getRandomArbitrary","join","random","_render","Date","now","isNaN","optimalDivider","smoothing","max","xf","yf","FFT","PI","sin","cos","render",3,"_clientParameter","_soundcloudTrackURL","soundcloudURL","ajaxGet","response","JSON","parse","streamURL","stream_url","_loadAudio","audioURL","request","XMLHttpRequest","open","responseType","onload","audioContext","decodeAudioData","_soundLoaded","_soundLoadError","send","error",4,"_launchExperience","loader","playButtonContainer","launchButton","setAttribute",5,"url","callback","onreadystatechange","readyState","status","responseText","script","async","getElementsByTagName","element","className","classList","remove","RegExp","split","preventDefault","returnValue","min","getRandomInteger",6,"./Application.js"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**!\r\n * @file Application Module.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\nvar global = {\r\n    trimStart: 0,\r\n    trimEnd: 0\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Application.\r\n * \r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @return {Object}\r\n */\r\nvar Application = (function (window, undefined) {\r\n    'use strict';\r\n\r\n\r\n    /**\r\n     * Current Application State.\r\n     * \r\n     * @type {Object|undefined}\r\n     * @private\r\n     */\r\n    var _state = undefined;\r\n\r\n    /**\r\n     * Global AudioContext for the Application.\r\n     * \r\n     * @type {AudioContext|undefined}\r\n     * @private\r\n     */\r\n    var _audioContext = undefined;\r\n\r\n    /**\r\n     * Audio object for the Application.\r\n     * \r\n     * @type {AudioBufferSourceNode|undefined}\r\n     * @private\r\n     */\r\n    var _sourceNode = undefined;\r\n\r\n    /**\r\n     * dat.GUI Controls for the Application.\r\n     * \r\n     * @type {Object|undefined}\r\n     * @private\r\n     */\r\n    var _gui = undefined;\r\n\r\n    /**\r\n     * Is the Application in Debug Mode?\r\n     * \r\n     * @type {Boolean}\r\n     * @private\r\n     */\r\n    var _isDebugMode = window.location.hash.indexOf('#debug') !== -1;\r\n\r\n    /**\r\n     * Audio Source node.\r\n     * \r\n     * @type {Object|undefined}\r\n     * @private\r\n     */\r\n    var _sourceNode = undefined;\r\n\r\n    /**\r\n     * JavaScript Audio Source node.\r\n     * \r\n     * @type {Object|undefined}\r\n     * @private\r\n     */\r\n    var _javascriptAudioNode = undefined;\r\n\r\n    /**\r\n     * Audio Analyser Node.\r\n     * \r\n     * @type {Object|undefined}\r\n     * @private\r\n     */\r\n    var _audioAnalyserNode = undefined;\r\n\r\n    /**\r\n     * Audio FFT data.\r\n     * \r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    var _FFT = [0.0, 0.0, 0.0];\r\n\r\n    var Utils = undefined;\r\n    var States = {\r\n        LoadingState: undefined,\r\n        PlayState: undefined,\r\n        LoadSceneState: undefined\r\n    };\r\n\r\n\r\n    /**\r\n     * Initialize the Module.\r\n     * \r\n     * @param  {Object} options Module configuration object.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var initialize = function (options) {\r\n        options = options || {};\r\n\r\n        // Load Modules:\r\n        Utils                 = options.Utils          || require('./Utils.js');\r\n        States.LoadingState   = options.LoadingState   || require('./LoadingState.js');\r\n        States.PlayState      = options.PlayState      || require('./PlayState.js');\r\n        States.LoadSceneState = options.LoadSceneState || require('./LoadSceneState.js');\r\n\r\n\r\n        if (_isDebugMode) {\r\n            // Initialize the Debug Mode:\r\n            _initializeDebugMode();\r\n        }\r\n\r\n        // Setup Audio Context:\r\n        _initializeAudioContext();\r\n\r\n        // Setup Graphic Context:\r\n        _initializeGraphicContext();\r\n\r\n        // Initialize the Application States:\r\n        _initializeStates(this);\r\n\r\n        // Setup Google Analytics Tracking:\r\n        _setupGoogleAnalyticsTracking();\r\n\r\n        // Set the initial Application state:\r\n        changeState(States.LoadingState);\r\n    };\r\n\r\n    /**\r\n     * Initialize the Audio Context for the Application.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initializeAudioContext = function () {\r\n        // Fix browser vendor for \"AudioContext\":\r\n        window.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.msAudioContext;\r\n\r\n        _audioContext = new AudioContext();\r\n\r\n\r\n        // Setup a JavaScript Node:\r\n        _javascriptAudioNode = _audioContext.createScriptProcessor(2048, 1, 1);\r\n        // Connect the JavaScript Node to the destination node (i.e. the speakers) -- otherwise it won't play:\r\n        _javascriptAudioNode.connect(_audioContext.destination);\r\n \r\n        // Setup an analyzer:\r\n        _audioAnalyserNode = _audioContext.createAnalyser();\r\n        _audioAnalyserNode.smoothingTimeConstant = 0.8;\r\n        _audioAnalyserNode.fftSize = 1024; //512\r\n \r\n        // Create a buffer source node:\r\n        _sourceNode = _audioContext.createBufferSource();\r\n\r\n \r\n        _sourceNode.connect(_audioAnalyserNode);\r\n        _audioAnalyserNode.connect(_javascriptAudioNode);\r\n        _sourceNode.connect(_audioContext.destination);\r\n\r\n\r\n\r\n        if (_isDebugMode) {\r\n            var canvas = document.getElementById('FFTContainer');\r\n            var canvasWidth = canvas.width;\r\n            var canvasHeight = canvas.height;\r\n            var ctx = canvas.getContext('2d');\r\n\r\n            var gradient = ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n            gradient.addColorStop(1.00, '#000000');\r\n            gradient.addColorStop(0.75, '#ff0000');\r\n            gradient.addColorStop(0.25, '#ffff00');\r\n            gradient.addColorStop(0.00, '#ffffff');\r\n        }\r\n\r\n        _javascriptAudioNode.onaudioprocess = function () {\r\n            var array = new Uint8Array(_audioAnalyserNode.frequencyBinCount);\r\n            _audioAnalyserNode.getByteFrequencyData(array);\r\n\r\n\r\n            if (_isDebugMode) {\r\n                // Clear the current state:\r\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n         \r\n                // Set the fill style:\r\n                ctx.fillStyle = gradient;\r\n\r\n                var nbBuckets = array.length;\r\n                var barWidth = Math.round(canvasWidth / nbBuckets);\r\n\r\n                for (var i = 0; i < nbBuckets; i++) {\r\n                    if (i >= global.trimStart && i <= global.trimEnd) {\r\n                        ctx.fillRect(i*barWidth, canvasHeight-array[i], barWidth, canvasHeight);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /*_FFT = [\r\n                array[199],\r\n                array[201],\r\n                array[202]\r\n            ];*/\r\n            _FFT = [\r\n                array[  4],\r\n                array[194],\r\n                array[202]\r\n            ];\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Initialize the Graohic Context for the Application.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initializeGraphicContext = function () {\r\n        // Fix browser vendor for \"requestAnimationFrame\" and \"cancelAnimationFrame\":\r\n        window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\r\n        window.cancelAnimationFrame  = window.cancelAnimationFrame  || window.webkitCancelAnimationFrame  || window.mozCancelAnimationFrame  || window.msCancelAnimationFrame;\r\n    };\r\n\r\n    /**\r\n     * Initialize all the Application States.\r\n     * \r\n     * @param  {Object} Application A reference to the Application.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initializeStates = function (Application) {\r\n        States.LoadingState.initialize(Application, { Utils: Utils });\r\n        States.PlayState.initialize(Application, { Utils: Utils });\r\n        States.LoadSceneState.initialize(Application, { Utils: Utils });\r\n    };\r\n\r\n    /**\r\n     * Setup Google Analytics tracking of DOM Elements.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _setupGoogleAnalyticsTracking = function () {\r\n        // Handle clicks on \"Album Art\" link:\r\n        var trackCoverLink = document.getElementById('trackCoverLink');\r\n        trackCoverLink.addEventListener('click', function (event) {\r\n            // Prevent default click behavior, with IE polyfill:\r\n            Utils.preventDefaultEvent(event);\r\n\r\n            // Send Google Analytics event to track clicks on Album Art:\r\n            ga('send', 'event', 'Button', 'Click', 'Album Art');\r\n        });\r\n\r\n\r\n        // Handle clicks on \"Artist\" link:\r\n        var trackArtistLink = document.getElementById('trackArtistLink');\r\n        trackArtistLink.addEventListener('click', function (event) {\r\n            // Prevent default click behavior, with IE polyfill:\r\n            Utils.preventDefaultEvent(event);\r\n\r\n            // Send Google Analytics event to track clicks on Artist:\r\n            ga('send', 'event', 'Button', 'Click', 'Artist');\r\n        });\r\n\r\n\r\n        // Handle clicks on \"View on GitHub\" link:\r\n        var githubLink = document.getElementById('githubLink');\r\n        githubLink.addEventListener('click', function (event) {\r\n            // Send Google Analytics event to track clicks on \"View on GitHub\":\r\n            ga('send', 'event', 'Button', 'Click', 'GitHub');\r\n        });\r\n\r\n\r\n        // Handle clicks on \"About\" link:\r\n        var aboutLink = document.getElementById('aboutLink');\r\n        aboutLink.addEventListener('click', function (event) {\r\n            // Prevent default click behavior, with IE polyfill:\r\n            Utils.preventDefaultEvent(event);\r\n\r\n            // Show the \"About\" Modal:\r\n            var aboutModal = document.getElementById('aboutModal');\r\n            Utils.removeCSSClass(aboutModal, 'hidden');\r\n\r\n            // Send Google Analytics event to track openings of the \"About\" Modal:\r\n            ga('send', 'event', 'Button', 'Click', 'About Modal');\r\n\r\n            var aboutModalClose = document.getElementById('aboutModalClose');\r\n            aboutModalClose.addEventListener('click', function (event) {\r\n                // Prevent default click behavior, with IE polyfill:\r\n                Utils.preventDefaultEvent(event);\r\n\r\n                // Hide the \"About\" Modal:\r\n                Utils.addCSSClass(aboutModal, 'hidden');\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialize the required libraries used in Debug Mode.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initializeDebugMode = function () {\r\n        // Load the FPS counter:\r\n        Utils.asyncLoadScript('https://rawgit.com/mrdoob/stats.js/master/build/stats.min.js', function () {\r\n            _drawStats();\r\n        });\r\n\r\n        // Load the UI Controls to change Application-specific variables:\r\n        Utils.asyncLoadScript('https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.5/dat.gui.min.js', function () {\r\n            _initializeDebugControls();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialize the GUI for Application Controls.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initializeDebugControls = function () {\r\n        // Setup Application Controls ViewModel:\r\n        var applicationControls = {\r\n            trackTitle: 0,\r\n            playSound: function () {\r\n                Application.playAudio();\r\n            },\r\n            trimStart: 0,\r\n            trimEnd: 350\r\n        };\r\n\r\n\r\n        // Bind Application Controls to GUI:\r\n        _gui = new dat.GUI({ autoPlace: false });\r\n        var trackTitleController = _gui.add(applicationControls, 'trackTitle', {\r\n            'Double-Edged Sword': 0\r\n        }).name('Track Title');\r\n        _gui.add(applicationControls, 'playSound').name('Play Sound');\r\n        _gui.add(applicationControls, 'trimStart', 0, 512, 1).onChange(function (value) {\r\n            console.log('Trim Start', value);\r\n            global.trimStart = value;\r\n        });\r\n        _gui.add(applicationControls, 'trimEnd', 0, 512, 1).onChange(function (value) {\r\n            console.log('Trim End', value);\r\n            global.trimEnd = value;\r\n        });\r\n\r\n\r\n        // Called when the track to play changes:\r\n        trackTitleController.onChange(function (value) {\r\n            var soundCloudTrackLinks = [\r\n                'https://soundcloud.com/boundarysound/boundary-double-edged-sword'\r\n            ];\r\n\r\n            console.log('Now playing:', soundCloudTrackLinks[value]);\r\n        });\r\n\r\n\r\n        // Add Controls to the DOM:\r\n        var customContainer = document.getElementById('GUIContainer');\r\n        customContainer.appendChild(_gui.domElement);\r\n    };\r\n\r\n    /**\r\n     * Draw performance stats to the screen.\r\n     *\r\n     * Stats Modes:\r\n     *   * 0 (FPS): Frames rendered in the last second. The higher the number the better.\r\n     *   * 1 (MS):  Milliseconds needed to render a frame. The lower the number the better.\r\n     *   * 2 (MB):  MBytes of allocated memory. (Run Chrome with --enable-precise-memory-info)\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _drawStats = function () {\r\n        // FPS stats:\r\n        var fpsStats = new Stats();\r\n        fpsStats.setMode(0);\r\n        fpsStats.domElement.style.cssText = 'position:fixed; left:5px; top:5px; z-index:10000;';\r\n        document.body.appendChild(fpsStats.domElement);\r\n\r\n        // MS stats:\r\n        var msStats = new Stats();\r\n        msStats.setMode(1);\r\n        msStats.domElement.style.cssText = 'position:fixed; left:85px; top:5px; z-index:10000;';\r\n        document.body.appendChild(msStats.domElement);\r\n\r\n        // MB stats:\r\n        var mbStats = new Stats();\r\n        mbStats.setMode(2);\r\n        mbStats.domElement.style.cssText = 'position:fixed; left:170px; top:5px; z-index:10000;';\r\n        document.body.appendChild(mbStats.domElement);\r\n\r\n        requestAnimationFrame(function loop () {\r\n            fpsStats.update();\r\n            msStats.update();\r\n            mbStats.update();\r\n\r\n            requestAnimationFrame(loop);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Change the Application State.\r\n     * \r\n     * @param  {Object} newState The new Application State.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var changeState = function (newState) {\r\n        if (_state !== newState) {\r\n            if (_state !== undefined) {\r\n                _state.exit();\r\n            }\r\n\r\n            _state = newState;\r\n\r\n            if (_state !== undefined) {\r\n                _state.enter();\r\n                _state.execute();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the AudioContext for the Application.\r\n     * \r\n     * @return {AudioContext} The AudioContext for the Application.\r\n     * @public\r\n     */\r\n    var getAudioContext = function () {\r\n        return _audioContext;\r\n    };\r\n\r\n\r\n    /**\r\n     * Set the Audio Source Node Buffer for the Application.\r\n     * \r\n     * @param {Object} sourceNode The Audio Source Node Buffer to play for the Application.\r\n     * @todo Stop/remove/deallocate/delete any previously set audio source.\r\n     * @public\r\n     */\r\n    var setSourceNodeBuffer = function (buffer) {\r\n        if (_sourceNode) {\r\n            // Make sure there is no sound currently playing:\r\n            if (_sourceNode.buffer) {\r\n                _sourceNode.stop(0);\r\n            }\r\n\r\n            _sourceNode.buffer = buffer;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Play the Audio for the Application, if any loaded.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var playAudio = function () {\r\n        if (_sourceNode) {\r\n            var trackInfoContainer = document.getElementById('trackInfo');\r\n            Utils.removeCSSClass(trackInfoContainer, 'hidden');\r\n\r\n            _sourceNode.start(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Stop the Audio for the Application, if any loaded.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var stopAudio = function () {\r\n        if (_sourceNode) {\r\n            _sourceNode.stop(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return the FFT data extracted from the audio spectrum.\r\n     * \r\n     * @return {Array} The FFT data extracted from the audio spectrum.\r\n     * @public\r\n     */\r\n    var getFFT = function () {\r\n        return _FFT;\r\n    };\r\n\r\n    /**\r\n     * Set the display information for the audio track to play.\r\n     * \r\n     * @param {Object} trackInfo The information about the audio track to play.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var setTrackInfo = function (trackInfo) {\r\n        var trackTitle = trackInfo.title;\r\n        var trackArtworkURL = trackInfo.artwork_url;\r\n        //var trackDescription = trackInfo.description;\r\n        var trackPermalinkURL = trackInfo.permalink_url;\r\n        //var trackPurchaseURL = trackInfo.purchage_url;\r\n        //var trackArtistAvatar = trackInfo.user.avatar_url;\r\n        var trackArtistPermalinkURL = trackInfo.user.permalink_url;\r\n        //var trackArtistName = trackInfo.user.username;\r\n        var trackAlbum = 'Self-titled (2013)';\r\n\r\n        var trackArtistName = 'Boundary';\r\n        var httpsPermalink = trackPermalinkURL.replace('http://', 'https://');\r\n        if (httpsPermalink === 'https://soundcloud.com/boundarysound/boundary-abidjan') {\r\n            trackTitle = 'Abidjan';\r\n        } else if (httpsPermalink === 'https://soundcloud.com/boundarysound/boundary-double-edged-sword') {\r\n            trackTitle = 'Double-Edged Sword';\r\n        }\r\n\r\n        document.getElementById('trackArtist').textContent = trackArtistName;\r\n        document.getElementById('trackTitle').textContent  = trackTitle;\r\n        document.getElementById('trackAlbum').textContent  = trackAlbum;\r\n        var artistLink = document.getElementById('trackArtistLink');\r\n        artistLink.href = trackArtistPermalinkURL;\r\n        artistLink.title = 'Follow ' + trackArtistName + ' on Soundcloud';\r\n        var coverLink = document.getElementById('trackCoverLink');\r\n        coverLink.href = trackArtistPermalinkURL;\r\n        coverLink.title = 'Follow ' + trackArtistName + ' on Soundcloud';\r\n        \r\n        var albumArt = document.getElementById('trackArtwork');\r\n        //if (trackArtworkURL && trackArtworkURL.length > 0) {\r\n        //    albumArt.onload = function (e) {\r\n        //        // \"Preload\" the album art:\r\n        //        var trackInfoContainer = document.getElementById('trackInfo');\r\n        //        Utils.removeCSSClass(trackInfoContainer, 'hidden');\r\n        //    };\r\n        //} else {\r\n        //    var trackInfoContainer = document.getElementById('trackInfo');\r\n        //    Utils.removeCSSClass(trackInfoContainer, 'hidden');\r\n        //}\r\n        albumArt.src = trackArtworkURL;\r\n    };\r\n\r\n    /**\r\n     * Return the States available for the Application.\r\n     * \r\n     * @return {Array} The States available for the Application.\r\n     * @public\r\n     */\r\n    var getStates = function () {\r\n        return States;\r\n    };\r\n\r\n\r\n    return {\r\n        initialize: initialize,\r\n        changeState: changeState,\r\n\r\n        getAudioContext: getAudioContext,\r\n        setSourceNodeBuffer: setSourceNodeBuffer,\r\n\r\n        playAudio: playAudio,\r\n        stopAudio: stopAudio,\r\n\r\n        getFFT: getFFT,\r\n\r\n        setTrackInfo: setTrackInfo,\r\n\r\n        getStates: getStates\r\n    };\r\n})(window);\r\n\r\n\r\nmodule.exports = Application;\r\n",null,"/**!\r\n * @file \"Loading Scene\" Module State for the Application.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\n\r\n/**\r\n * \"Load Scene\" State for the Application.\r\n * \r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @return {Object}\r\n * @public\r\n */\r\nvar LoadSceneState = (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * A reference to the Application.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _Application = undefined;\r\n\r\n    /**\r\n     * A reference to the Utils object.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var Utils = undefined;\r\n\r\n    var _container;\r\n    var _camera, _scene, _renderer;\r\n    var _has_gl = false;\r\n    var _delta;\r\n    var _time;\r\n    var _oldTime;\r\n    var _shaderTime = 0;\r\n    var _meshes = [];\r\n    var _overlay;\r\n    var _texture;\r\n    var _color;\r\n    var _vignette;\r\n    var _mouse;\r\n    var _gravity;\r\n    var _mouseObj;\r\n    var _isTouchDevice = false;\r\n    var _scaleRatio = 1;\r\n    var _nbLoadedResources = 0;\r\n\r\n\r\n    /**\r\n     * Initialize the Application State.\r\n     * \r\n     * @param  {Object} Application A reference to the Application.\r\n     * @param  {Object} options     Initialization options for the State.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var initialize = function (Application, options) {\r\n        console.log('LoadSceneState::initialize');\r\n\r\n        _Application = Application;\r\n        Utils = options.Utils || require('./Utils.js');\r\n\r\n\r\n        _mouse = new THREE.Vector2(/*-0.5, 0.5*/0.0, 0.0);\r\n        _gravity = new THREE.Vector3(0, /*-0.75*/0, 0);\r\n        _mouseObj = {\r\n            x: 0, \r\n            y: 0, \r\n\r\n            vx: 0, \r\n            vy: 0\r\n        };\r\n\r\n        _isTouchDevice = 'ontouchstart' in document || navigator.userAgent.match(/ipad|iphone|android/i) != null;\r\n        if (_isTouchDevice) {\r\n            _scaleRatio = 2;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Prepare the State for execution.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var enter = function () {\r\n        console.log('LoadSceneState::enter');\r\n    };\r\n\r\n    /**\r\n     * Execute the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var execute = function () {\r\n        console.log('LoadSceneState::execute');\r\n\r\n        //_Application.setStatus('Loading Scene...');\r\n        \r\n\r\n        _initScene();\r\n    };\r\n\r\n    /**\r\n     * Exit the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var exit = function () {\r\n        console.log('LoadSceneState::exit');\r\n    };\r\n\r\n    //var _cameraControls;\r\n\r\n    /**\r\n     * Initialize the assets for the scene rendering.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _initScene = function () {\r\n        _container = document.getElementById('container');\r\n        //document.body.appendChild(_container);\r\n\r\n\r\n\r\n        // Setup scene & camera:\r\n        _scene = new THREE.Scene();\r\n\r\n        _camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 1, 1000);\r\n        _camera.position.z = 150;\r\n        _camera.lookAt(_scene.position);\r\n\r\n        //_cameraControls = new THREE.OrbitControls(_camera);\r\n        //_cameraControls.damping = 0.2;\r\n        //_cameraControls.addEventListener('change', _render);\r\n\r\n\r\n\r\n\r\n        // Load texture for diffuse color:\r\n        // Patterns available:\r\n        // * patterns/19335527-Hair-background-Hair-style-pattern-Vector-illustration-Stock-Vector.jpg\r\n        // * patterns/fd1-vector-seamless-abstract-vector-pattern-repeat-geometric-triangle-mosaic-background-112162439.jpg\r\n        // * patterns/F1fBm-resize.jpg\r\n        // * patterns/yyy8Z-resize.jpg\r\n        // * patterns/1-resize.jpg\r\n        // * 11133-v4.jpg\r\n        _color = THREE.ImageUtils.loadTexture('img/19335527-Hair-background-Hair-style-pattern-Vector-illustration-Stock-Vector-resize.jpg', undefined, _resourceLoadedCallback);\r\n        _color.wrapS = _color.wrapT = THREE.RepeatWrapping;\r\n\r\n        // Load texture for fur:\r\n        _texture = new THREE.Texture( _generateTexture() );\r\n        _texture.needsUpdate = true;\r\n        _texture.wrapS = _texture.wrapT = THREE.RepeatWrapping;\r\n\r\n        // Load model:\r\n        //var _loader = new THREE.JSONLoader();\r\n        //_loader.load('suzanne.js', _meshLoaded);\r\n        _meshLoaded();\r\n\r\n        // Load texture for background:\r\n        _vignette = THREE.ImageUtils.loadTexture('img/VignetteWithDirt_alpha_sq.png', undefined, _resourceLoadedCallback);\r\n\r\n\r\n\r\n        // Set screen overlay using background texture as Sprite:\r\n        var overlayMaterial = new THREE.SpriteMaterial({\r\n            map: _vignette, \r\n            useScreenCoordinates: true, \r\n            opacity: 0.4\r\n        });\r\n        _overlay = new THREE.Sprite(overlayMaterial);\r\n        _overlay.scale.set(window.innerWidth/_scaleRatio, window.innerHeight/_scaleRatio, 1);\r\n        _overlay.position.set((window.innerWidth/_scaleRatio)/2, (window.innerHeight/_scaleRatio)/2 , 0);\r\n        _camera.add(_overlay);\r\n\r\n        _scene.add(_camera);\r\n\r\n\r\n\r\n        try {\r\n            // Create App renderer:\r\n            _renderer = new THREE.WebGLRenderer({\r\n                antialias: false,\r\n                alpha: true\r\n            });\r\n            _renderer.setClearColor(0x000000, 0);\r\n            //_renderer.setPixelRatio(window.devicePixelRatio);\r\n            _renderer.setSize(window.innerWidth/_scaleRatio, window.innerHeight/_scaleRatio);\r\n\r\n            _texture.anisotropy = _renderer.getMaxAnisotropy();\r\n\r\n            if (_scaleRatio > 1) {\r\n                _renderer.domElement.style.position = 'absolute';\r\n                _renderer.domElement.style.top = '0px';\r\n                _renderer.domElement.style.left = '0px';\r\n\r\n                _renderer.domElement.style.webkitTransform = 'scale3d(' + _scaleRatio + ', ' + _scaleRatio + ', 1)';\r\n                _renderer.domElement.style.webkitTransformOrigin = '0 0 0';\r\n                _renderer.domElement.style.transform = 'scale3d(' + _scaleRatio + ', ' + _scaleRatio + ', 1)';\r\n                _renderer.domElement.style.transformOrigin = '0 0 0';                \r\n            }\r\n\r\n\r\n            // Register window & document listeners:\r\n            window.addEventListener('resize', _onWindowResize, false);\r\n            document.addEventListener('mousemove', _onMouseMove, false);\r\n            document.addEventListener('touchmove', _onTouchMove, false);\r\n\r\n            // Add renderer to the DOM:\r\n            _container.appendChild(_renderer.domElement);\r\n            //_container.style.cursor = 'url(cursor.png), pointer';\r\n\r\n            _has_gl = true;\r\n        } catch (ex) {\r\n            // WebGL no supported:\r\n            var infoElement = document.getElementById('info');\r\n            if (infoElement) {\r\n                infoElement.innerHTML = '<p><br /><strong>Note:</strong> You need a modern browser that supports WebGL for this to run the way it is intended.<br />For example. <a href=\"http://www.google.com/landing/chrome/beta/\" target=\"_blank\">Google Chrome 9+</a> or <a href=\"http://www.mozilla.com/firefox/beta/\" target=\"_blank\">Firefox 4+</a>.<br /><br />If you are already using one of those browsers and still see this message, it\\'s possible that you<br />have old blacklisted GPU drivers. Try updating the drivers for your graphic card.<br />Or try to set a \"--ignore-gpu-blacklist\" switch for the browser.</p><CENTER><BR><img src=\"../general/WebGL_logo.png\" border=\"0\"></CENTER>';\r\n                infoElement.style.display = 'block';\r\n            }\r\n        }\r\n\r\n        //_Application.changeState(PlayState);\r\n    };\r\n\r\n    /**\r\n     * Called when a resource (texture, model) is loaded.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _resourceLoadedCallback = function () {\r\n        if (++_nbLoadedResources === 3) {\r\n            //_Application.setStatus('Scene Loaded');\r\n\r\n\r\n            _Application.playAudio();\r\n\r\n            // All resources have been loaded, proceed to animate the scene:\r\n            _animate();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called on window resize.\r\n     * \r\n     * @param  {Object} event Window resize event.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _onWindowResize = function (event) {\r\n        var width  = window.innerWidth;\r\n        var height = window.innerHeight;\r\n\r\n        _renderer.setSize(width/_scaleRatio, height/_scaleRatio);\r\n\r\n        _camera.aspect = width / height;\r\n        _camera.updateProjectionMatrix();\r\n\r\n        if (_overlay) {\r\n            _overlay.scale.set( w/_scaleRatio, height/_scaleRatio, 1 );\r\n            _overlay.position.set((width/_scaleRatio)/2, (height/_scaleRatio)/2 , 0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called on mouse move event.\r\n     * \r\n     * @param  {Object} event Mouse move event.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _onMouseMove = function (event) {\r\n        // Prevent default click behavior, with IE polyfill:\r\n        //(event.preventDefault) ? event.preventDefault() : event.returnValue = false;\r\n        Utils.preventDefaultEvent(event);\r\n\r\n        _mouse.x =   (event.clientX / window.innerWidth)  * 2 - 1;\r\n        _mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n    };\r\n\r\n    /**\r\n     * Called on touch event.\r\n     * \r\n     * @param  {Object} event Touch event.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _onTouchMove = function (event) {\r\n        // Prevent default click behavior, with IE polyfill:\r\n        //(event.preventDefault) ? event.preventDefault() : event.returnValue = false;\r\n        Utils.preventDefaultEvent(event);\r\n\r\n        _mouse.x =   (event.touches[0].clientX / window.innerWidth)  * 2 - 1;\r\n        _mouse.y = - (event.touches[0].clientY / window.innerHeight) * 2 + 1;\r\n    };\r\n\r\n    /**\r\n     * Callback for the loading of the geometry data used to build the mesh.\r\n     * \r\n     * @param  {Object} geometry The geometry for the mesh.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _meshLoaded = function (geometry) {\r\n        geometry = new THREE.SphereGeometry(1, 32, 32);\r\n\r\n        // Scale up the geometry:\r\n        var size = 60 * 1.05;\r\n        geometry.applyMatrix( new THREE.Matrix4().scale( new THREE.Vector3(size, size, size) ) );\r\n\r\n        // Set the umber of \"shells\"/layers for the device:\r\n        var nbShells = 60*2.5;\r\n        if (_isTouchDevice) {\r\n            nbShells = 45;\r\n        }\r\n\r\n        // Create meshes from the loaded geometry:\r\n        for (var i = 0; i < nbShells; i++) {\r\n            // Create attributes for the mesh:\r\n            var attributes = { };\r\n\r\n            // Create uniforms for the mesh:\r\n            var uniforms = {\r\n                color:      { type: 'c',  value: new THREE.Color(0xffffff) },\r\n                hairMap:    { type: 't',  value: _texture },\r\n                colorMap:   { type: 't',  value: _color },\r\n                offset:     { type: 'f',  value: i/nbShells },\r\n                globalTime: { type: 'f',  value: _shaderTime },\r\n                gravity:    { type: 'v3', value: _gravity },\r\n            };\r\n\r\n            // Create material options for the mesh:\r\n            var material = new THREE.ShaderMaterial({\r\n                uniforms:       uniforms,\r\n                attributes:     attributes,\r\n                vertexShader:   document.getElementById('vertexshader').textContent,\r\n                fragmentShader: document.getElementById('fragmentshader').textContent,\r\n                transparent: true,\r\n            });\r\n\r\n            var mesh =  new THREE.Mesh(geometry, material);\r\n            mesh.matrixAutoUpdate = false;\r\n            mesh.frustumCulled = false;\r\n            _scene.add(mesh);\r\n            _meshes.push(mesh);\r\n        }\r\n\r\n        // Execute the \"_resourceLoadedCallback\", as the Mesh has been created:\r\n        _resourceLoadedCallback();\r\n    };\r\n\r\n    /**\r\n     * Generate texture for fur.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _generateTexture = function () {\r\n        // Create a canvas where to draw the texture:\r\n        var canvas = document.createElement('canvas');\r\n        canvas.width  = 256;\r\n        canvas.height = 256;\r\n\r\n        var context = canvas.getContext('2d');\r\n\r\n        for (var i = 0; i < 20000; ++i) {\r\n            // r = hair? 1/0\r\n            // g = hair strand length\r\n            // b = hair strand darkness\r\n            var fillStyle = [\r\n                255,\r\n                Math.floor( Utils.getRandomArbitrary(0, 255) ), // Math.floor(Math.random() * 255),\r\n                Math.floor( Utils.getRandomArbitrary(0, 255) ), // Math.floor(Math.random() * 255),\r\n                Math.floor( Utils.getRandomArbitrary(-12.0, 2.0) )  // 1\r\n            ];\r\n            //context.fillStyle = 'rgba(255,' + Math.floor(Math.random() * 255) + ',' + Math.floor(Math.random() * 255) + ',1)';\r\n            context.fillStyle = 'rgba(' + fillStyle.join(',') + ')';\r\n            \r\n            context.fillRect(Math.random()*canvas.width, Math.random()*canvas.height, 2, 2);\r\n        }\r\n\r\n        return canvas;\r\n    };\r\n\r\n    /**\r\n     * Animate the scene.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _animate = function () {\r\n        requestAnimationFrame(_animate);\r\n\r\n        _render();\r\n        //_cameraControls.update();\r\n    };\r\n\r\n    /**\r\n     * Render the scene to the screen.\r\n     * \r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _render = function () {\r\n        _time = Date.now();\r\n        _delta = _time - _oldTime; // Time elapsed since last frame was drawn.\r\n        _oldTime = _time;\r\n\r\n        if (isNaN(_delta) || _delta > 1000 || _delta == 0) {\r\n            _delta = 1000/60; // Set default frame duration to 1/60 of a second.\r\n        }\r\n\r\n        var optimalDivider = _delta/16;\r\n        var smoothing = Math.max(4, 20/optimalDivider);\r\n\r\n\r\n        // Fake some gravity according to mouse movement:\r\n        var xf = (_mouse.x - _mouseObj.x) / (smoothing*5);\r\n        var yf = (_mouse.y - _mouseObj.y) / (smoothing*5);\r\n        _mouseObj.vx += xf\r\n        _mouseObj.vy += yf;\r\n        _mouseObj.vx *= 0.96;\r\n        _mouseObj.vy *= 0.94;\r\n        _mouseObj.x += _mouseObj.vx;\r\n        _mouseObj.y += _mouseObj.vy;\r\n\r\n        _gravity.x = - (_mouse.x - _mouseObj.x) * 2;\r\n\r\n        //var dif = Math.sin(_mouse.x)*150 - _camera.position.x;\r\n        //_gravity.y = -0.75 + (Math.abs(dif)/150) - (_mouse.y - _mouseObj.y)*2;\r\n        var FFT = _Application.getFFT();\r\n        //_gravity.x = FFT[0] / 255 * 2;\r\n        _gravity.y = 0.0; //Math.cos(FFT[1] / 255) * 2;\r\n        //DOUBLE-EDGED SWORD: _gravity.z = Math.sin(FFT[2] / 255) * 2;\r\n        \r\n        //LERP: pu = p0 + (p1 - p0) * u\r\n        var x = Math.PI * (FFT[1] - 255*2/3)/(255*2/3) - Math.PI / 2   + Math.PI / 4;\r\n        var y = Math.PI * FFT[0]/255 - Math.PI / 2   - Math.PI / 4;\r\n        //_gravity.x = Math.sin((FFT[0]-128) / 255 - 0.5);\r\n        //_gravity.y = Math.sin((FFT[1]-128) / 255 - 0.5);\r\n        _gravity.x = Math.sin(x) + Math.PI / 4;\r\n        _gravity.y = Math.sin(y);\r\n        //console.log(/*_gravity,*/ FFT[0]-128, FFT[1]-128);\r\n        //console.log(_gravity, x, y);\r\n\r\n        // Set the camera position based on mouse movement:\r\n        _camera.position.x += (Math.sin(_mouse.x)*150 - _camera.position.x) / smoothing;\r\n        _camera.position.z += (Math.cos(_mouse.x)*150 - _camera.position.z) / smoothing;\r\n        _camera.position.y += (Math.sin(_mouse.y)*150 - _camera.position.y) / smoothing;\r\n\r\n        _camera.lookAt(_scene.position);\r\n\r\n        _shaderTime += _delta*0.005;\r\n\r\n        for (var i = 0; i < _meshes.length; i++) {\r\n            _meshes[i].material.uniforms.globalTime.value = _shaderTime;\r\n        }\r\n\r\n        if (_has_gl) {\r\n            _renderer.render(_scene, _camera);\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        initialize: initialize,\r\n        enter: enter,\r\n        execute: execute,\r\n        exit: exit\r\n    };\r\n})();\r\n\r\n\r\nmodule.exports = LoadSceneState;\r\n","/**!\r\n * @file \"Loading\" State Module for the Application.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\n\r\n/**\r\n * \"Loading\" State for the Application.\r\n * \r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @return {Object}\r\n * @public\r\n */\r\nvar LoadingState = (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * A reference to the Application.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _Application = undefined;\r\n\r\n    /**\r\n     * A reference to the Utils object.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var Utils = undefined;\r\n\r\n    /**\r\n     * SoundCloud API ClientID.\r\n     * \r\n     * @type {String}\r\n     * @private\r\n     */\r\n    var _clientParameter = 'client_id=3b2585ef4a5eff04935abe84aad5f3f3';\r\n\r\n    /**\r\n     * URL of the track to play.\r\n     * \r\n     * @type {String}\r\n     * @private\r\n     */\r\n    //var _soundcloudTrackURL = 'https://soundcloud.com/boundarysound/boundary-double-edged-sword';\r\n    //var _soundcloudTrackURL = 'https://soundcloud.com/aviciiofficial/avicii-levels-original-mix';\r\n    var _soundcloudTrackURL = 'https://soundcloud.com/boundarysound/boundary-abidjan';\r\n\r\n\r\n    /**\r\n     * Initialize the Application State.\r\n     * \r\n     * @param  {Object} Application A reference to the Application.\r\n     * @param  {Object} options     Initialization options for the State.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var initialize = function (Application, options) {\r\n        console.log('LoadingState::initialize');\r\n\r\n        _Application = Application;\r\n        Utils = options.Utils || require('./Utils.js');\r\n    };\r\n\r\n    /**\r\n     * Prepare the State for execution.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var enter = function () {\r\n        console.log('LoadingState::enter');\r\n    };\r\n\r\n    /**\r\n     * Execute the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var execute = function () {\r\n        console.log('LoadingState::execute');\r\n\r\n        //_Application.setStatus('Loading track...');\r\n\r\n\r\n        var soundcloudURL = 'http://api.soundcloud.com/resolve.json?url=' + _soundcloudTrackURL + '&' + _clientParameter\r\n        Utils.ajaxGet(soundcloudURL, function (response) {\r\n            var trackInfo = JSON.parse(response);\r\n\r\n            var streamURL = trackInfo.stream_url + '?' + _clientParameter;\r\n            _loadAudio(streamURL);\r\n\r\n            _Application.setTrackInfo(trackInfo);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Exit the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var exit = function () {\r\n        console.log('LoadingState::exit');\r\n    };\r\n\r\n    /**\r\n     * Load the Audio to play.\r\n     * \r\n     * @param  {String} audioURL The URL of the Audio stream to download.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _loadAudio = function (audioURL) {\r\n        console.log('LoadingState::_loadAudio');\r\n\r\n\r\n        // Load the specified sound:\r\n        var request = new XMLHttpRequest();\r\n        request.open('GET', audioURL, true);\r\n        request.responseType = 'arraybuffer';\r\n        // When loaded, decode the data:\r\n        request.onload = function () {\r\n            var audioContext = _Application.getAudioContext();\r\n            audioContext.decodeAudioData(request.response, _soundLoaded, _soundLoadError);\r\n        }\r\n        request.send(null);\r\n    };\r\n\r\n    /**\r\n     * Callback executed once the audio data has been loaded and decoded.\r\n     * \r\n     * @param  {Object} buffer Audio data buffer for the track to play.\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _soundLoaded = function (buffer) {\r\n        console.log('LoadingState::_playSound');\r\n\r\n\r\n        _Application.setSourceNodeBuffer(buffer);\r\n        console.log(_Application, _Application.getStates(), _Application.getStates().PlayState);\r\n        _Application.changeState(_Application.getStates().PlayState);\r\n    };\r\n\r\n    /**\r\n     * Callback executed if the audio data could not be decoded.\r\n     * \r\n     * @param  {Object} error Error details\r\n     * @return {void}\r\n     * @private\r\n     */\r\n    var _soundLoadError = function (error) {\r\n        console.log(error);\r\n    }\r\n\r\n\r\n    return {\r\n        initialize: initialize,\r\n        enter: enter,\r\n        execute: execute,\r\n        exit: exit\r\n    };\r\n})();\r\n\r\n\r\nmodule.exports = LoadingState;\r\n","/**!\r\n * @file \"Play\" State Module for the Application.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\n\r\n/**\r\n * \"Play\" State for the Application.\r\n * \r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @return {Object}\r\n * @public\r\n */\r\nvar PlayState = (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * A reference to the Application.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var _Application = undefined;\r\n\r\n    /**\r\n     * A reference to the Utils object.\r\n     * \r\n     * @type {Object}\r\n     * @private\r\n     */\r\n    var Utils = undefined;\r\n\r\n\r\n    /**\r\n     * Initialize the Application State.\r\n     * \r\n     * @param  {Object} Application A reference to the Application.\r\n     * @param  {Object} options     Initialization options for the State.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var initialize = function (Application, options) {\r\n        console.log('PlayState::initialize');\r\n\r\n        _Application = Application;\r\n        Utils = options.Utils || require('./Utils.js');\r\n    };\r\n\r\n    /**\r\n     * Prepare the State for execution.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var enter = function () {\r\n        console.log('PlayState::enter');\r\n\r\n        //_Application.setStatus('Ready');\r\n    };\r\n\r\n    /**\r\n     * Execute the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var execute = function () {\r\n        console.log('PlayState::execute');\r\n\r\n        _launchExperience();\r\n    };\r\n\r\n    /**\r\n     * Exit the Application State.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var exit = function () {\r\n        console.log('PlayState::exit');\r\n    };\r\n\r\n    /**\r\n     * Display a \"Launch Experiment\" while waiting for user to be ready to start the animation.\r\n     * \r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var _launchExperience = function () {\r\n        // Hide the loading animation:\r\n        var loader = document.getElementById('loader');\r\n        Utils.removeCSSClass(loader, 'loading');\r\n\r\n        // Show the \"Launch Experiment\" CTA:\r\n        var playButtonContainer = document.getElementById('playButton');\r\n        Utils.removeCSSClass(playButtonContainer, 'hidden');\r\n\r\n        // Handle click on \"Launch Experiment\" CTA:\r\n        var launchButton = document.getElementById('launchExperience');\r\n        launchButton.addEventListener('click', function (event) {\r\n            // Prevent default click behavior, with IE polyfill:\r\n            //(event.preventDefault) ? event.preventDefault() : event.returnValue = false;\r\n            Utils.preventDefaultEvent(event);\r\n\r\n            // Prevent multiple clicks on the button by disabling the \"<a>\":\r\n            launchButton.setAttribute('disabled', 'disabled');\r\n\r\n            // Hide the \"Launch Experiment\" CTA:\r\n            Utils.addCSSClass(playButtonContainer, 'hidden');\r\n\r\n            // Send Google Analytics event to track how many people actually launch the experiment:\r\n            ga('send', 'event', 'Button', 'Click', 'Launch Experience');\r\n\r\n            _Application.changeState(_Application.getStates().LoadSceneState);\r\n        });\r\n    };\r\n\r\n\r\n    return {\r\n        initialize: initialize,\r\n        enter: enter,\r\n        execute: execute,\r\n        exit: exit\r\n    };\r\n})();\r\n\r\n\r\nmodule.exports = PlayState;\r\n","/**!\r\n * @file Utils and Helpers Module for the Application.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\n\r\n/**\r\n * Utils & Helpers.\r\n * \r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @return {Object}\r\n * @public\r\n */\r\nvar Utils = (function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * Perform an AJAX HTTP GET request to the given URL.\r\n     * \r\n     * @param  {String}   url      The URL to HTTP GET.\r\n     * @param  {Function} callback The callback function to execute once the HTTP GET is completed.\r\n     * @return {void}\r\n     * @oublic\r\n     */\r\n    var ajaxGet = function (url, callback) {\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.onreadystatechange = function () { \r\n            if (request.readyState === 4 && request.status === 200 && typeof callback === 'function') {\r\n                callback(request.responseText);\r\n            }\r\n        };\r\n\r\n        request.open('GET', url, true);\r\n        request.send(null);\r\n    };\r\n\r\n    /**\r\n     * Async load the given JavaScript file.\r\n     * \r\n     * @param  {String}    url      The URL of the JavaScript file to download.\r\n     * @param  {Function?} callback The (optional) callback to execute once the file is loaded.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var asyncLoadScript = function (url, callback) {\r\n        var script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.async = true;\r\n\r\n        if (script.readyState) {\r\n            script.onreadystatechange = function () {\r\n                if (script.readyState === 'loaded' || script.readyState === 'complete') {\r\n                    script.onreadystatechange = null;\r\n                    if (callback && typeof callback === 'function') {\r\n                        callback();\r\n                    }\r\n                }\r\n            };\r\n        } else {\r\n            script.onload = function () {\r\n                if (callback && typeof callback === 'function') {\r\n                    callback();\r\n                }\r\n            };\r\n        }\r\n\r\n        script.src = url;\r\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(script);\r\n    };\r\n\r\n    /**\r\n     * Remove the given CSS class from the given DOMElement.\r\n     * \r\n     * @param  {DOMElement} element   DOM Element from which to remove the class.\r\n     * @param  {String}     className CSS class name to remove from the element.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var removeCSSClass = function (element, className) {\r\n        if (element.classList) {\r\n            element.classList.remove(className);\r\n        } else {\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add the given CSS class to the given DOMElement.\r\n     * \r\n     * @param {DOMElement} element   DOM Element to which to add the class.\r\n     * @param {String}     className CSS class name to add to the element.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var addCSSClass = function (element, className) {\r\n        if (element.classList) {\r\n            element.classList.add(className);\r\n        } else {\r\n            element.className += ' ' + className;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Prevent default click behavior, with IE polyfill.\r\n     * \r\n     * @param  {Event} event The event object raised by the Event.\r\n     * @return {void}\r\n     * @public\r\n     */\r\n    var preventDefaultEvent = function (event) {\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n        } else {\r\n            event.returnValue = false;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Return a random number between min (inclusive) and max (exclusive).\r\n     *\r\n     * @param {Float|Integer} min The minimal value of the range (inclusive).\r\n     * @param {Float|Integer} max The maximal value of the range (exclusive).\r\n     * @return {Float} A random number between min (inclusive) and max (exclusive).\r\n     * @public\r\n     */\r\n    var getRandomArbitrary = function (min, max) {\r\n        return Math.random() * (max - min) + min;\r\n    };\r\n\r\n    /**\r\n     * Returns a random integer between min (inclusive) and max (inclusive).\r\n     * Using Math.round() would return a non-uniform distribution!\r\n     * \r\n     * @param {Integer} min The minimal value of the range (inclusive).\r\n     * @param {Integer} max The maximal value of the range (inclusive).\r\n     * @return {Integer} A random number between min (inclusive) and max (inclusive).\r\n     * @public\r\n     */\r\n    var getRandomInteger = function (min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    };\r\n\r\n\r\n    return {\r\n        ajaxGet: ajaxGet,\r\n        asyncLoadScript: asyncLoadScript,\r\n\r\n        removeCSSClass: removeCSSClass,\r\n        addCSSClass: addCSSClass,\r\n\r\n        getRandomArbitrary: getRandomArbitrary,\r\n        getRandomInteger: getRandomInteger,\r\n\r\n        preventDefaultEvent: preventDefaultEvent\r\n    };\r\n})();\r\n\r\n\r\nmodule.exports = Utils;\r\n","/**!\r\n * @file Application entry point.\r\n * @author Philippe Sawicki (https://github.com/philsawicki)\r\n * @copyright Copyright Philippe Sawicki 2015\r\n * @license MIT\r\n */\r\n\r\n'use strict';\r\n\r\n\r\nvar Application = require('./Application.js');\r\n\r\n// Initialize and launch the Application:\r\nApplication.initialize();\r\n"],"sourceRoot":"/source/"}